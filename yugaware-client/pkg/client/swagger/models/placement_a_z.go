// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlacementAZ placement a z
//
// swagger:model PlacementAZ
type PlacementAZ struct {

	// is affinitized
	IsAffinitized bool `json:"isAffinitized,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// num nodes in a z
	NumNodesInAZ int32 `json:"numNodesInAZ,omitempty"`

	// replication factor
	ReplicationFactor int32 `json:"replicationFactor,omitempty"`

	// secondary subnet
	SecondarySubnet string `json:"secondarySubnet,omitempty"`

	// subnet
	Subnet string `json:"subnet,omitempty"`

	// uuid
	// Format: uuid
	UUID strfmt.UUID `json:"uuid,omitempty"`
}

// Validate validates this placement a z
func (m *PlacementAZ) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlacementAZ) validateUUID(formats strfmt.Registry) error {
	if swag.IsZero(m.UUID) { // not required
		return nil
	}

	if err := validate.FormatOf("uuid", "body", "uuid", m.UUID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this placement a z based on context it is used
func (m *PlacementAZ) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlacementAZ) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlacementAZ) UnmarshalBinary(b []byte) error {
	var res PlacementAZ
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
