// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NodeActionFormData node action form data
//
// swagger:model NodeActionFormData
type NodeActionFormData struct {

	// node action
	// Required: true
	// Enum: [ADD REMOVE START STOP DELETE QUERY RELEASE START_MASTER]
	NodeAction *string `json:"nodeAction"`
}

// Validate validates this node action form data
func (m *NodeActionFormData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodeAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var nodeActionFormDataTypeNodeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ADD","REMOVE","START","STOP","DELETE","QUERY","RELEASE","START_MASTER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nodeActionFormDataTypeNodeActionPropEnum = append(nodeActionFormDataTypeNodeActionPropEnum, v)
	}
}

const (

	// NodeActionFormDataNodeActionADD captures enum value "ADD"
	NodeActionFormDataNodeActionADD string = "ADD"

	// NodeActionFormDataNodeActionREMOVE captures enum value "REMOVE"
	NodeActionFormDataNodeActionREMOVE string = "REMOVE"

	// NodeActionFormDataNodeActionSTART captures enum value "START"
	NodeActionFormDataNodeActionSTART string = "START"

	// NodeActionFormDataNodeActionSTOP captures enum value "STOP"
	NodeActionFormDataNodeActionSTOP string = "STOP"

	// NodeActionFormDataNodeActionDELETE captures enum value "DELETE"
	NodeActionFormDataNodeActionDELETE string = "DELETE"

	// NodeActionFormDataNodeActionQUERY captures enum value "QUERY"
	NodeActionFormDataNodeActionQUERY string = "QUERY"

	// NodeActionFormDataNodeActionRELEASE captures enum value "RELEASE"
	NodeActionFormDataNodeActionRELEASE string = "RELEASE"

	// NodeActionFormDataNodeActionSTARTMASTER captures enum value "START_MASTER"
	NodeActionFormDataNodeActionSTARTMASTER string = "START_MASTER"
)

// prop value enum
func (m *NodeActionFormData) validateNodeActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, nodeActionFormDataTypeNodeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NodeActionFormData) validateNodeAction(formats strfmt.Registry) error {

	if err := validate.Required("nodeAction", "body", m.NodeAction); err != nil {
		return err
	}

	// value enum
	if err := m.validateNodeActionEnum("nodeAction", "body", *m.NodeAction); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this node action form data based on context it is used
func (m *NodeActionFormData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NodeActionFormData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodeActionFormData) UnmarshalBinary(b []byte) error {
	var res NodeActionFormData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
