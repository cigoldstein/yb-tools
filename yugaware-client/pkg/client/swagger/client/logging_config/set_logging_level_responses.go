// Code generated by go-swagger; DO NOT EDIT.

package logging_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetLoggingLevelReader is a Reader for the SetLoggingLevel structure.
type SetLoggingLevelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetLoggingLevelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	result := NewSetLoggingLevelDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result
}

// NewSetLoggingLevelDefault creates a SetLoggingLevelDefault with default headers values
func NewSetLoggingLevelDefault(code int) *SetLoggingLevelDefault {
	return &SetLoggingLevelDefault{
		_statusCode: code,
	}
}

/* SetLoggingLevelDefault describes a response with status code -1, with default header values.

successful operation
*/
type SetLoggingLevelDefault struct {
	_statusCode int
}

// Code gets the status code for the set logging level default response
func (o *SetLoggingLevelDefault) Code() int {
	return o._statusCode
}

func (o *SetLoggingLevelDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/logging_config][%d] setLoggingLevel default ", o._statusCode)
}

func (o *SetLoggingLevelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
